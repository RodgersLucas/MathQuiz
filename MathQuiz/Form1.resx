<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAD/AAAArgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuAAAA/wAAADMAAAAAAAAAAAAAAAAAAAAZAAAA2gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABrAAAAJgAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAMwAA
        AP8AAACuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAD/AAAAMwAAAAAAAAAAAAAAAAAA
        AGsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAArgAAAAAAAAAAAAAAAAAA
        AAAAAAAzAAAA/wAAAK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArgAAAP8AAAAzAAAAAAAA
        AAAAAAAAAAAArgAAAP8AAABrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAANoAAAAmAAAAAAAA
        AAAAAAAAAAAAAAAAADMAAAD/AAAArgAAAAAAAAAAAAAAAAAAAJwAAAAAAAAAAAAAAAAAAACuAAAA/wAA
        ADMAAAAAAAAAAAAAAAAAAACuAAAA/wAAAGsAAAAAAAAAAAAAAAAAAAAMAAAAiwAAAP8AAAD/AAAADAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAP8AAACuAAAAAAAAAAAAAAAMAAAA/wAAABkAAAAAAAAAAAAA
        AK4AAAD/AAAAMwAAAAAAAAAAAAAAAAAAAK4AAAD/AAAAawAAAAAAAAAAAAAADAAAAMMAAAD/AAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAA/wAAAK4AAAAAAAAAAAAAAE4AAAD/AAAAXAAA
        AAAAAAAAAAAArgAAAP8AAAAzAAAAAAAAAAAAAAAAAAAArgAAAP8AAABrAAAAAAAAAAAAAABrAAAA/wAA
        AFwAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAD/AAAArgAAAAAAAAAAAAAAiwAA
        AP8AAACcAAAAAAAAAAAAAACuAAAA/wAAADMAAAAAAAAAAAAAAAAAAACuAAAA/wAAAGsAAAAAAAAAAAAA
        AGsAAABOAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAP8AAACuAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAAAAAAAAAAAAK4AAAD/AAAAMwAAAAAAAAAAAAAAAAAAAK4AAAD/AAAAawAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAA/wAA
        AK4AAAAAAAAAJgAAAP8AAAD/AAAA/wAAADMAAAAAAAAArgAAAP8AAAAzAAAAAAAAAAAAAAAAAAAArgAA
        AP8AAABrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADMAAAD/AAAArgAAAAAAAABcAAAA/wAAAFwAAAD/AAAAegAAAAAAAACuAAAA/wAAADMAAAAAAAAAAAAA
        AAAAAACuAAAA/wAAAGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMwAAAP8AAACuAAAAAAAAAK4AAAD/AAAAAAAAAP8AAADDAAAAAAAAAK4AAAD/AAAAMwAA
        AAAAAAAAAAAAAAAAAK4AAAD/AAAAawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAzAAAA/wAAAK4AAAAMAAAA/wAAAJwAAAAAAAAAiwAAAP8AAAAZAAAArgAA
        AP8AAAAzAAAAAAAAAAAAAAAAAAAArgAAAP8AAABrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAD/AAAArgAAAEAAAAD/AAAAXAAAAAAAAABOAAAA/wAA
        AE4AAACuAAAA/wAAADMAAAAAAAAAAAAAAAAAAACuAAAA/wAAAGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAP8AAACuAAAAegAAAP8AAAAmAAAAAAAA
        ABkAAAD/AAAAiwAAAK4AAAD/AAAAMwAAAAAAAAAAAAAAAAAAAK4AAAD/AAAAawAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAA/wAAAK4AAADaAAAA/wAA
        AAAAAAAAAAAAAAAAANoAAAD/AAAArgAAAP8AAAAzAAAAAAAAAAAAAAAAAAAArgAAAP8AAABrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAD/AAAA2gAA
        AP8AAACcAAAAAAAAAAAAAAAAAAAAiwAAAP8AAADDAAAA/wAAADMAAAAAAAAAAAAAAAAAAACuAAAA/wAA
        AGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAA
        AP8AAAD/AAAA/wAAAE4AAAAAAAAAAAAAAAAAAABAAAAA/wAAAP8AAAD/AAAAMwAAAAAAAAAAAAAAAAAA
        AK4AAAD/AAAAawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAzAAAA/wAAAP8AAAD/AAAAGQAAAAAAAAAAAAAAAAAAAAwAAAD/AAAA/wAAAP8AAAAzAAAAAAAA
        AAAAAAAAAAAArgAAAP8AAABrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADMAAAD/AAAA/wAAANoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMAAAD/AAAA/wAA
        ADMAAAAAAAAAAAAAAAAAAACuAAAA/wAAAGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAP8AAAD/AAAAiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAegAA
        AP8AAAD/AAAAMwAAAAAAAAAAAAAAAAAAAK4AAAD/AAAAawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAA/wAAAP8AAABOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABAAAAA/wAAAP8AAAAzAAAAAAAAAAAAAAAAAAAArgAAAP8AAABrAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAD/AAAA/wAAAAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAADMAAAAAAAAAAAAAAAAAAABrAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAP8AAADDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK4AAAD/AAAAMwAAAAAAAAAAAAAAAAAAABkAAADaAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////+P44AHj+OAB4/jj4eO444PjGOMH4xjjB+MY
        4yfjGOPn4gjj5+II4+fiSOPn4EDj5+BA4+fgQOPn4ODj5+Dg4+fg4OPn4ODj5+Hw4+fh8OPn4fDj5+H4
        4Afj+OAH//////////////////////////8=
</value>
  </data>
</root>